<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	
	<beans:bean id="dataSource" 
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/myoracle"/>
	</beans:bean>
	
	<beans:bean id="sessionFactory" 
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation"
	value="classpath:com/spring/board/mybatis/Configuration.xml"/>
	</beans:bean>
	
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory" 
			ref="sessionFactory"/>
	</beans:bean>
	

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Transaction Manager  설정 -->
	<beans:bean id="txManager" 
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- 어노테이션으로 트렌젝션 설정이 가능하도록 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- Tiles 뷰 리졸버 -->
	<beans:bean id="tielsViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	    <beans:property name="order" value="1" />
	</beans:bean>
	 
	<!-- Tiles 설정 파일 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>/WEB-INF/tiles/tiles.xml</beans:value>
	        </beans:list>
	    </beans:property>
	</beans:bean>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>  <!-- tiles를 위해 우선순위 2로 -->
	</beans:bean>
	
	<context:component-scan base-package="com.spring.board" />
	
	<!-- 어노테이션 기반으로 aop 적용할수 있도록 설정 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	

	
	<!-- 파일 업로드 폼 전송 처리를 위한 bean 설정 -->
	<resources mapping="/imgUpLoad/**" location="/resources/imgUpLoad/" />
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10240000"/>
	</beans:bean>
	
	<!-- 언어설정 -->
	<interceptors>
	    <beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	    	<beans:property name="paramName" value="lang" />
	    </beans:bean>
    </interceptors>	 
    
    
    <!-- 인터셉터 bean 설정 -->
	<!-- 사용자 세션체크 bean -->
	<beans:bean id="loginInterceptor" class="com.spring.board.interceptor.LoginInterceptor"/>
	<!-- 회원 관리자 세션체크 bean -->
	<beans:bean id="MemberAdminInterceptor" class="com.spring.board.interceptor.MemberAdminInterceptor"/>
	<!-- 게시판 세션체크 bean -->
	<beans:bean id="BoardAdminInterceptor" class="com.spring.board.interceptor.BoardAdminInterceptor"/>
	<!-- 이미 로그인 한 상태 -->
	<beans:bean id="AlreadyLoginInterceptor" class="com.spring.board.interceptor.AlreadyLoginInterceptor"/>
	<!-- logger 공통 -->
	<beans:bean id="LoggerInterceptor" class="com.spring.board.interceptor.LoggerInterceptor"/>
	<!-- 인터셉터 매핑정보 -->
	<interceptors>
	
		<!-- 사용자 세션체크 매핑 -->
		<interceptor>
			<mapping path="/member/private/*"/>
			<mapping path="/board/private/*"/>
			<mapping path="/memberAdmin/*"/>			
			<beans:ref bean="loginInterceptor"/>
		</interceptor> 
		<!-- 회원 관리자 세션체크 매핑 --> 
		<interceptor>
			<mapping path="/memberAdmin/*"/>			
			<beans:ref bean="MemberAdminInterceptor"/>
		</interceptor> 
		<!-- 게시판 세션체크 매핑 --> 
		<interceptor>
			<mapping path="/board/private/insert_form.do"/>			
			<mapping path="/board/private/insert.do"/>	
			<mapping path="/board/private/reply_form.do"/>			
			<mapping path="/board/private/reply.do"/>		
			<beans:ref bean="BoardAdminInterceptor"/>
		</interceptor>
		<!-- 이미 로그인 한 상태 매핑 -->
		<interceptor>
			<mapping path="/member/*"/>
			<exclude-mapping path="/member/private/*"/>			
			<beans:ref bean="AlreadyLoginInterceptor"/>
		</interceptor>
		<!-- logger 매핑 -->
		<interceptor>
			<mapping path="/*"/>			
			<mapping path="/*/*"/>			
			<mapping path="/*/*/*"/>			
			<mapping path="/*/*/*/*"/>			
			<beans:ref bean="LoggerInterceptor"/>
		</interceptor> 
	</interceptors>
	
</beans:beans>
