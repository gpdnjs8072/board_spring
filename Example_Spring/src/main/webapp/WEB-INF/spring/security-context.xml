<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:annotation-config/>
	
 	<context:component-scan base-package="com.spring.board" /> 
	
	<!-- URL 매핑 권한 -->
	 <security:http auto-config="true" use-expressions="true" access-decision-manager-ref="accessDecisionManager"> 
	 	
 	 	<security:intercept-url pattern="/index" access="permitAll" />

	    <security:intercept-url pattern="/member/signup_form.do" access="permitAll" />
		<security:intercept-url pattern="/member/signup.do" access="permitAll" />
		<security:intercept-url pattern="/member/login_form.do" access="permitAll" />
		<security:intercept-url pattern="/member/login.do" access="permitAll" />
		<security:intercept-url pattern="/board/list.do" access="permitAll" />
		<security:intercept-url pattern="/board/detail.do" access="permitAll" />
		<security:intercept-url pattern="/user.do" access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/guest.do" access="hasRole('ROLE_GUEST')" />
		<security:intercept-url pattern="/manager.do" access="hasRole('ROLE_MANAGER')" />
		<security:intercept-url pattern="/admin.do" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/member/private/*" access="hasAnyRole('ROLE_USER')" />	
		<security:intercept-url pattern="/board/private/*" access="hasAnyRole('ROLE_USER')" />
<!-- 		<security:intercept-url pattern="/member/private/*" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_MANAGER')" />	 -->
<!-- 		<security:intercept-url pattern="/board/private/*" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_MANAGER')" /> -->
		 <security:intercept-url pattern="/memberAdmin/*" access="hasRole('ROLE_ADMIN')" />  
		<security:intercept-url pattern="/**" access="permitAll" /> 
		<!--로그인 시  -->
	  	<security:form-login login-page="/member/login_form.do"  login-processing-url="/member/login.do"
	  		username-parameter="mem_id" password-parameter="mem_pwd"
	  		authentication-success-handler-ref="customLoginSuccess"
	  		authentication-failure-handler-ref="customLoginFail" />
	  		
		<!--  로그아웃 시  -->
 		<security:logout logout-url="/member/private/logout.do" 
 							invalidate-session="true" delete-cookies="JSESSIONID" 
 							success-handler-ref="customLogoutSuccess" />  
 
		<!-- 접근 불가 -->
	 	 <security:access-denied-handler ref="customAccessDenied"/>  
	 	
	 	<!-- 중복로그인 불가  -->
	 	 <security:session-management>
            <security:concurrency-control max-sessions="1" expired-url="/login_duplicate"/>
        </security:session-management>
		
	</security:http>
	 
	 <!-- 로그인 성공시 이동하는 커스텀 로그인 핸들러 -->
	 <beans:bean id="customLoginSuccess" class="com.spring.board.custom.SuccessHandler">
	 	<beans:property name="defaultTargetUrl" value="/index.do"/>
	 	<beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
	 </beans:bean>
	 
	  <beans:bean id="customLoginFail" class="com.spring.board.custom.FailHandler">
	  	<beans:property name="errorMsg" value="ERRORMSG"/>
	  	<beans:property name="defaultFailureUrl" value="/member/login_form.do"/>
	 </beans:bean>
	
	 <beans:bean id="customLogoutSuccess" class="com.spring.board.custom.LogoutHandler"></beans:bean> 
	 
	 <!-- 접근불가 핸들러 -->
	<beans:bean id="customAccessDenied" class="com.spring.board.custom.AccessDeniedHandlerImpl"></beans:bean> 
	
	<!-- 패스워드 암호화 -->
 	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" /> 
        
       <security:authentication-manager>
          <security:authentication-provider user-service-ref="userService"> 
			<security:password-encoder ref="passwordEncoder"/>
           </security:authentication-provider>
       </security:authentication-manager>
       <security:jdbc-user-service data-source-ref="dataSource" id="userService"
		users-by-username-query="SELECT mem_id as username,
									mem_pwd as password,
									1 as enabled
									FROM member WHERE mem_id=? AND mem_stateCode='101'"
		authorities-by-username-query="SELECT mem_id as username,
										CASE WHEN mem_authCode='001' THEN 'ROLE_USER'
										    WHEN mem_authCode='002' THEN 'ROLE_ADMIN'
										    WHEN mem_authCode='003' THEN 'ROLE_MANAGER'
										END authority
										FROM member WHERE mem_id=?"  /> 
		<!-- 만약 오류나면 case when else 확인 -->
	
	<!-- 권한 계층 설정 -->
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<beans:constructor-arg name="decisionVoters" >
		    <beans:list>
		      <beans:ref bean="webExpressionVoter"/>
		    </beans:list>
	 	</beans:constructor-arg>
	</beans:bean>
	
	
	<beans:bean id="webExpressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter">
	  <beans:property name="expressionHandler" ref="expressionHandler" />
	</beans:bean>
	
		<beans:bean id="expressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
	   <beans:property name="roleHierarchy" ref="roleHierarchy" /> 
	</beans:bean>
	
	<beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl"> 
		<beans:property name="hierarchy"> 
			<beans:value> 
				ROLE_ADMIN > ROLE_MANAGER
				ROLE_MANAGER > ROLE_USER
			</beans:value> 
		</beans:property> 
	</beans:bean> 


</beans:beans>


